/*
 * Copyright (c) 2019 Clinia
 * http://www.clinia.ca/
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        versions = [
                gradle          : '3.5.2',
                androidX        : '2.1.0',
                core_ktx        : '1.1.0',
                kotlin          : '1.3.60',
                constraintLayout: '1.1.3',
                recyclerView    : '1.1.0',
                appcompat       : '1.1.0',
                lifecycle       : "2.0.0",
                material        : '1.2.0-alpha02',
                retrofit        : '2.6.2',
                moshi           : '1.8.0',
                playServices    : '17.0.0',
                dokka           : '0.10.0',
                nexus           : '0.5.3',
                pegdown         : '1.3'
        ]

        configuration = [
                application: 'TODO',
                apiKey: 'AAW3nfvI79tj4LzECYZSEbDP7lqBpFd5',
                devEndpoint: 'https://api.partner.staging.clinia.ca/',
                prodEndpoint: 'https://api.partner.clinia.ca/'

        ]
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "com.android.tools.build:gradle:${versions.gradle}"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${versions.dokka}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"

        classpath "ch.raffael.pegdown-doclet:pegdown-doclet:${versions.pegdown}"
        classpath "com.android.tools.build:gradle:${versions.gradle}"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:${versions.nexus}"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

ext {
    PUBLISH_GROUP_ID = 'ca.clinia'
}

apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'org.jetbrains.dokka'

nexusStaging {
    packageGroup = PUBLISH_GROUP_ID
    username = System.getenv("NEXUS_USERNAME")
    password = System.getenv("NEXUS_PASSWORD")
    stagingProfileId = ''
    numberOfRetries = 3
    delayBetweenRetriesInMillis = 3000
}

dokka {
    outputFormat = 'gfm'
    outputDirectory = "$buildDir/javadoc"

    subProjects = ['clinia-vision']

    configuration {
        includeNonPublic = false
        skipDeprecated = false

        reportUndocumented = true
        skipEmptyPackages = true

//        includes = ['packages.md', 'extra.md']
//        samples = ['samples/basic.kt', 'samples/advanced.kt']
    }
}